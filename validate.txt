import React, { Component } from 'react';
const emailRegex= RegExp
(/^[a-zA-Z0-9.!#$%&'*+/=?^_'{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/)

const formValid=({formErrors, ...rest})=>{
    let valid=true;
 //validate form errors being empty
    Object.values(formErrors).forEach(val=> { val.length> 0 && (valid=false);
    });
// validate the form was filled out
    Object.values(rest).forEach(val=>{
        val===null &&(valid=false)
    });

    return valid;

}
class Register extends Component {
    constructor(props){
        super(props);
        this.state={
            firstName:null,
            lastName:null,
           email:null,
            password:null,

            formErrors:{
                firstName:"",
                lastName:"",
                email:"",
                password:""
            }
        };
    }

    handleSubmit=e=>{
        e.preventDefault();
        if(formValid(this.state)){
            localStorage.setItem('documents',JSON.stringify(this.state));
            console.log(`
            First Name:${this.state.firstName}
            Last Name:${this.state.lastName}
           Email:${this.state.email}
            Password:${this.state.password}


            `)
        }else{
            console.log('InValid Form')
            console.error('Form Invalid')
        }
    };
    componentDidMount(){
        this.documentData=JSON.parse(localStorage.getItem('document'));
        if(localStorage.getItem('document')){
            this.setState({
                firstName:this.documentData.firstName,
                lastName:this.documentData.lastName,
                email:this.documentData.email,
                password:this.documentData.password
            })
        }
            else{
                this.setState({
                    firstName:'',
                    lastName:'',
                    email:'',
                    password:''


                })
            }
        }
    
    handlChange=e=>{
        e.preventDefault();
        const {name,value}=e.target;
        let formErrors=this.state.formErrors;
       

        switch(name){
            case "firstName":
                formErrors.firstName=value.length < 4  ? "minimum 4 characters required"
                :"";
                break;
                case "lastName":
                formErrors.lastName=value.length < 4  ? "minimum 4 characters required"
                :"";
                break;
                 case "email":
                    formErrors.email=emailRegex.test(value)  
                    ?''
                    :'invalid email address';
                    break;
                 case "password":
                    formErrors.password=value.length < 5  ? "minimum 5 characters required"
                    :"";
                    break;    
                    default:
                    break;  

        }
        this.setState({formErrors,[name]: value}, ()=> console.log(this.state));
    };
    render() {
        const { formErrors}=this.state;
        return (
            <div className="wrapper">
                <div className="form-wrapper">
                    <h1>Create Account</h1>
                    <form onSubmit={this.handleSubmit} noValidate>
                    <div class="form-group">
                        <div className="firstName">
                            <label htmlFor="firstName">First Name:</label>
                            <input  className={formErrors.firstName.length> 0 ? "error" : null} placeholder="firstName" type="text" 
                            name="firstName" noValidate onChange={this.handlChange}/>

                            {formErrors.firstName.length>0 && (
                                <span className="errorMessage">{formErrors.firstName}</span>
                            )}
                        </div>
                        </div>
                        <div class="form-group">
                        <div className="lastName">
                            <label htmlFor="lastName">Last Name:</label>
                            <input  className={formErrors.lastName.length> 0 ? "error" : null} placeholder="lastName" type="text" 
                            name="lastName" noValidate onChange={this.handlChange}/>

                        {formErrors.lastName.length>0 && (
                                <span className="errorMessage">{formErrors.lastName}</span>
                            )}
                        </div>
                        </div>
                        <div class="form-group">
                        <div className="email">
                            <label htmlFor="email">Email:&nbsp;&nbsp;&nbsp;</label>
                            <input className={formErrors.email.length> 0 ? "error" : null} placeholder="email" type="email" 
                            name="email" noValidate onChange={this.handlChange}/>

                              {formErrors.email.length>0 && (
                                <span className="errorMessage">{formErrors.email}</span>
                            )}
                        </div>
                        </div>
                        <div class="form-group">
                        <div className="password">
                            <label htmlFor="password">Password:</label>
                            <input  className={formErrors.password.length> 0 ? "error" : null} placeholder="password" type="password" 
                            name="password" noValidate onChange={this.handlChange}/>

                              {formErrors.password.length>0 && (
                                <span className="errorMessage">{formErrors.password}</span>
                            )}
                        </div>
                        </div>
                  < div className="createAccount">
                      <button className="btn btn-primary btn-sm btn-space" type="submit">Create Account </button>
                  <a href="/login"> All ready have an Account</a>
                     
                  </div>
                    </form>
                </div>
                
            </div>
        );
    }
}
export default Register;